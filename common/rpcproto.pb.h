/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4-dev at Wed Sep 16 10:37:31 2015. */

#ifndef PB_RPCPROTO_PB_H_INCLUDED
#define PB_RPCPROTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _RPCMessage_message_type {
    RPCMessage_message_type_REQUEST = 0,
    RPCMessage_message_type_RESPONSE = 1,
    RPCMessage_message_type_LIST_METHODS_REQUEST = 2,
    RPCMessage_message_type_LIST_METHODS_RESPONSE = 3,
    RPCMessage_message_type_ERROR = 4
} RPCMessage_message_type;

typedef enum _RPCMessage_error_type {
    RPCMessage_error_type_INVALID_ARGS = 0,
    RPCMessage_error_type_INVALID_METHOD = 1
} RPCMessage_error_type;

/* Struct definitions */
typedef struct _MethodInfo {
    char name[32];
    uint32_t min_args;
    uint32_t max_args;
    char description[128];
    char arg_info[128];
} MethodInfo;

typedef struct _RPCMessage {
    RPCMessage_message_type type;
    pb_callback_t method;
    bool has_name;
    char name[32];
    pb_callback_t args;
    bool has_result;
    uint32_t result;
    bool has_error;
    RPCMessage_error_type error;
} RPCMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MethodInfo_init_default                  {"", 0, 0, "", ""}
#define RPCMessage_init_default                  {(RPCMessage_message_type)0, {{NULL}, NULL}, false, "", {{NULL}, NULL}, false, 0, false, (RPCMessage_error_type)0}
#define MethodInfo_init_zero                     {"", 0, 0, "", ""}
#define RPCMessage_init_zero                     {(RPCMessage_message_type)0, {{NULL}, NULL}, false, "", {{NULL}, NULL}, false, 0, false, (RPCMessage_error_type)0}

/* Field tags (for use in manual encoding/decoding) */
#define MethodInfo_name_tag                      1
#define MethodInfo_min_args_tag                  2
#define MethodInfo_max_args_tag                  3
#define MethodInfo_description_tag               4
#define MethodInfo_arg_info_tag                  5
#define RPCMessage_type_tag                      1
#define RPCMessage_method_tag                    2
#define RPCMessage_name_tag                      3
#define RPCMessage_args_tag                      4
#define RPCMessage_result_tag                    6
#define RPCMessage_error_tag                     7

/* Struct field encoding specification for nanopb */
extern const pb_field_t MethodInfo_fields[6];
extern const pb_field_t RPCMessage_fields[7];

/* Maximum encoded size of messages (where known) */
#define MethodInfo_size                          308

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RPCPROTO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
