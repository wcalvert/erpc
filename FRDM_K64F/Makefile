#
# Copyright (c) 2015, Wes Calvert
# This file was originally generated by mbed, and I have hacked it up.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holders nor the
# names of its contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ''AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#

GCC_BIN = 
PROJECT = FRDM_K64F-Ethernet
OBJECTS =  ./mbed-rtos/rtx/TARGET_CORTEX_M/TARGET_M4/TOOLCHAIN_GCC/HAL_CM4.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/TARGET_M4/TOOLCHAIN_GCC/SVC_Table.o
OBJECTS += ./EthernetInterface/lwip-eth/arch/TARGET_Freescale/fsl_enet_driver.o
OBJECTS += ./EthernetInterface/lwip-eth/arch/TARGET_Freescale/k64f_emac.o
OBJECTS += ./EthernetInterface/lwip-eth/arch/TARGET_Freescale/hardware_init_MK64F12.o
OBJECTS += ./EthernetInterface/lwip-sys/arch/memcpy.o
OBJECTS += ./EthernetInterface/lwip-sys/arch/sys_arch.o
OBJECTS += ./EthernetInterface/lwip-sys/arch/checksum.o
OBJECTS += ./EthernetInterface/lwip/core/mem.o
OBJECTS += ./EthernetInterface/lwip/core/raw.o
OBJECTS += ./EthernetInterface/lwip/core/def.o
OBJECTS += ./EthernetInterface/lwip/core/tcp_in.o
OBJECTS += ./EthernetInterface/lwip/core/dns.o
OBJECTS += ./EthernetInterface/lwip/core/stats.o
OBJECTS += ./EthernetInterface/lwip/core/timers.o
OBJECTS += ./EthernetInterface/lwip/core/init.o
OBJECTS += ./EthernetInterface/lwip/core/netif.o
OBJECTS += ./EthernetInterface/lwip/core/udp.o
OBJECTS += ./EthernetInterface/lwip/core/pbuf.o
OBJECTS += ./EthernetInterface/lwip/core/tcp_out.o
OBJECTS += ./EthernetInterface/lwip/core/memp.o
OBJECTS += ./EthernetInterface/lwip/core/tcp.o
OBJECTS += ./EthernetInterface/lwip/core/dhcp.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/ip_frag.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/ip_addr.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/autoip.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/icmp.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/inet_chksum.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/ip.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/inet.o
OBJECTS += ./EthernetInterface/lwip/core/ipv4/igmp.o
OBJECTS += ./EthernetInterface/lwip/core/snmp/msg_in.o
OBJECTS += ./EthernetInterface/lwip/core/snmp/mib2.o
OBJECTS += ./EthernetInterface/lwip/core/snmp/asn1_dec.o
OBJECTS += ./EthernetInterface/lwip/core/snmp/asn1_enc.o
OBJECTS += ./EthernetInterface/lwip/core/snmp/mib_structs.o
OBJECTS += ./EthernetInterface/lwip/core/snmp/msg_out.o
OBJECTS += ./EthernetInterface/lwip/netif/etharp.o
OBJECTS += ./EthernetInterface/lwip/netif/ethernetif.o
OBJECTS += ./EthernetInterface/lwip/netif/slipif.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/chpms.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/fsm.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/auth.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/magic.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/chap.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/randm.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/pap.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/vj.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/ipcp.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/md5.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/ppp_oe.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/lcp.o
OBJECTS += ./EthernetInterface/lwip/netif/ppp/ppp.o
OBJECTS += ./EthernetInterface/lwip/api/sockets.o
OBJECTS += ./EthernetInterface/lwip/api/api_msg.o
OBJECTS += ./EthernetInterface/lwip/api/err.o
OBJECTS += ./EthernetInterface/lwip/api/netifapi.o
OBJECTS += ./EthernetInterface/lwip/api/netbuf.o
OBJECTS += ./EthernetInterface/lwip/api/netdb.o
OBJECTS += ./EthernetInterface/lwip/api/tcpip.o
OBJECTS += ./EthernetInterface/lwip/api/api_lib.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Mailbox.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Robin.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/HAL_CM.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Mutex.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Event.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Time.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Task.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_CMSIS.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_List.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/RTX_Conf_CM.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_System.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_Semaphore.o
OBJECTS += ./mbed-rtos/rtx/TARGET_CORTEX_M/rt_MemBox.o
OBJECTS += ./EthernetInterface/EthernetInterface.o
OBJECTS += ./mbed-rtos/rtos/Semaphore.o
OBJECTS += ./mbed-rtos/rtos/Mutex.o
OBJECTS += ./mbed-rtos/rtos/RtosTimer.o
OBJECTS += ./mbed-rtos/rtos/Thread.o
OBJECTS += ../common/pb_common.o
OBJECTS += ../common/pb_decode.o
OBJECTS += ../common/pb_encode.o
OBJECTS += ../common/rpcproto.pb.o
OBJECTS += ./erpc/erpc.o
OBJECTS += ./erpc/commands.o
OBJECTS += ./QEI/QEI.o
OBJECTS += ./PID/PID.o
OBJECTS += ./main.o


SYS_OBJECTS  = ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/mbed_overrides.o
SYS_OBJECTS += ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/system_MK64F12.o
SYS_OBJECTS += ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/startup_MK64F12.o
SYS_OBJECTS += ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/board.o
SYS_OBJECTS += ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/cmsis_nvic.o
SYS_OBJECTS += ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/retarget.o


INCLUDE_PATHS  = -I. 
INCLUDE_PATHS += -I./mbed 
INCLUDE_PATHS += -I./mbed/TARGET_K64F 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/MK64F12 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/device 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/device/MK64F12 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/device/device 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/device/device/MK64F12 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_MCU_K64F/TARGET_FRDM 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/common 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/common/phyksz8081 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/lptmr 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/dac 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/gpio 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/port 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/llwu 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/sim 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/rcm 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/sdhc 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/can 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/mpu 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/smc 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/osc 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/flextimer 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/pdb 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/enet 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/i2c 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/uart 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/dspi 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/pit 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/lpuart 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/sai 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/rtc 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/mcg 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/edma 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/pmc 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/adc 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/wdog 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/hal/dmamux 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/utilities 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/drivers 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/drivers/enet 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/drivers/pit 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/drivers/pit/common 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/drivers/interrupt 
INCLUDE_PATHS += -I./mbed/TARGET_K64F/TARGET_Freescale/TARGET_KPSDK_MCUS/TARGET_KPSDK_CODE/drivers/clock 
INCLUDE_PATHS += -I./EthernetInterface 
INCLUDE_PATHS += -I./EthernetInterface/lwip-eth 
INCLUDE_PATHS += -I./EthernetInterface/lwip-eth/arch 
INCLUDE_PATHS += -I./EthernetInterface/lwip-eth/arch/TARGET_Freescale 
INCLUDE_PATHS += -I./EthernetInterface/lwip-sys 
INCLUDE_PATHS += -I./EthernetInterface/lwip-sys/arch 
INCLUDE_PATHS += -I./EthernetInterface/lwip 
INCLUDE_PATHS += -I./EthernetInterface/lwip/core 
INCLUDE_PATHS += -I./EthernetInterface/lwip/core/ipv4 
INCLUDE_PATHS += -I./EthernetInterface/lwip/core/snmp 
INCLUDE_PATHS += -I./EthernetInterface/lwip/include 
INCLUDE_PATHS += -I./EthernetInterface/lwip/include/ipv4 
INCLUDE_PATHS += -I./EthernetInterface/lwip/include/ipv4/lwip 
INCLUDE_PATHS += -I./EthernetInterface/lwip/include/netif 
INCLUDE_PATHS += -I./EthernetInterface/lwip/include/lwip 
INCLUDE_PATHS += -I./EthernetInterface/lwip/netif 
INCLUDE_PATHS += -I./EthernetInterface/lwip/netif/ppp 
INCLUDE_PATHS += -I./EthernetInterface/lwip/api 
INCLUDE_PATHS += -I./mbed-rtos 
INCLUDE_PATHS += -I./mbed-rtos/rtx 
INCLUDE_PATHS += -I./mbed-rtos/rtx/TARGET_CORTEX_M 
INCLUDE_PATHS += -I./mbed-rtos/rtx/TARGET_CORTEX_M/TARGET_M4 
INCLUDE_PATHS += -I./mbed-rtos/rtx/TARGET_CORTEX_M/TARGET_M4/TOOLCHAIN_GCC 
INCLUDE_PATHS += -I./mbed-rtos/rtos 
INCLUDE_PATHS += -I./QEI
INCLUDE_PATHS += -I./PID
INCLUDE_PATHS += -I../common
INCLUDE_PATHS += -I./erpc


LIBRARY_PATHS = -L./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM 
LIBRARIES = -lmbed 
LINKER_SCRIPT = ./mbed/TARGET_K64F/TOOLCHAIN_GCC_ARM/K64FN1M0xxx12.ld

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size 

ifeq ($(HARDFP),1)
	FLOAT_ABI = hard
else
	FLOAT_ABI = softfp
endif


CPU = -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=$(FLOAT_ABI) 
CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_SYMBOLS = -DTARGET_KPSDK_MCUS -DTARGET_FF_ARDUINO -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -DCPU_MK64FN1M0VMD12 -DTARGET_FRDM -DTARGET_CORTEX_M -D__FPU_PRESENT=1 -DTARGET_KPSDK_CODE -DTARGET_M4 -D__MBED__=1 -DTARGET_K64F -DTARGET_Freescale -D__CORTEX_M4 -DFSL_RTOS_MBED -DTARGET_MCU_K64F -DARM_MATH_CM4 -DMBED_BUILD_TIMESTAMP=1443149925.31 

LD_FLAGS = $(CPU) -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float -Wl,--wrap,main -Wl,-Map=$(PROJECT).map,--cref
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size

all: $(PROJECT).bin $(PROJECT).hex size


clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)


.asm.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++98 -fno-rtti $(INCLUDE_PATHS) -o $@ $<



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)


